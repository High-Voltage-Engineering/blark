// *Currently unused* instruction list grammar extracted from iec.lark
// (originally part of X-Pie Software GmbH's original
// (v1.2) IEC 61131-3 grammar distributed under the GPL as part of iec2xml)

%import iec.IDENTIFIER
%import iec.DOTTED_IDENTIFIER
%import iec.WS

%import iec._variable
%import iec.constant
%import iec.enumerated_value
%import iec.fb_name
%import iec.variable_name

?start: instruction_list

%ignore WS

EOL: /\s*[\n\r]+/
?il_label: IDENTIFIER
?function_name: DOTTED_IDENTIFIER

instruction_list: il_instruction+

il_instruction: [ il_label ":" ] [ il_single_operation ] EOL

il_single_operation: il_simple_operation
                   | il_expression
                   | il_jump_operation
                   | il_fb_call
                   | il_formal_funct_call
                   | il_return_operator

il_simple_operation: IL_SIMPLE_OPERATOR [ il_operand ]
                   | function_name [ il_operand_list ]

il_expression: IL_EXPR_OPERATOR "(" [ il_operand ] EOL [ _simple_instr_list ] ")"

il_jump_operation: IL_JUMP_OPERATOR il_label

il_fb_call: IL_CALL_OPERATOR fb_name ( "(" ( ( ( EOL [ il_param_list ] ) | ( [ il_operand_list ] ) ) ) ")" )?

il_formal_funct_call: function_name "(" EOL [ il_param_list ] ")"

il_operand: constant
          | _variable
          | enumerated_value

il_operand_list: il_operand ( "," il_operand )*

_simple_instr_list: il_simple_instruction+

il_simple_instruction: ( il_simple_operation | il_expression | il_formal_funct_call ) EOL

il_param_list: il_param_instruction* il_param_last_instruction

il_param_instruction: ( il_param_assignment | il_param_out_assignment ) "," EOL

il_param_last_instruction: ( il_param_assignment | il_param_out_assignment ) EOL

il_param_assignment: il_assign_operator ( il_operand | ( "(" EOL _simple_instr_list ")" ) )

il_param_out_assignment: il_assign_out_operator _variable

// B.2.2
IL_OPERATOR_NOT: "NOT"i
IL_OPERATOR_ANDN: "ANDN"i | "&N"i
IL_OPERATOR_AND: "AND"i | "&"

IL_SIMPLE_OPERATOR: "LD"i
                  | "LDN"i
                  | "ST"i
                  | "STN"i
                  | "NOT"i
                  | "S"i
                  | "R"i
                  | "S1"i
                  | "R1"i
                  | "CLK"i
                  | "CU"i
                  | "CD"i
                  | "PV"i
                  | "IN"i
                  | "PT"i
                  | IL_EXPR_OPERATOR

IL_EXPR_OPERATOR: IL_OPERATOR_ANDN
                | IL_OPERATOR_AND
                | "OR"i
                | "XOR"i
                | "ORN"i
                | "XORN"i
                | "ADD"i
                | "SUB"i
                | "MUL"i
                | "DIV"i
                | "MOD"i
                | "GT"i
                | "GE"i
                | "EQ"i
                | "LT"i
                | "LE"i
                | "NE"i

il_assign_operator: variable_name ":="

il_assign_out_operator: [ IL_OPERATOR_NOT ] variable_name "=>"

IL_CALL_OPERATOR: "CAL"i
                | "CALC"i
                | "CALCN"i

il_return_operator: "RET"i
                  | "RETC"i
                  | "RETCN"i

IL_JUMP_OPERATOR: "JMP"i
                | "JMPC"i
                | "JMPCN"i
